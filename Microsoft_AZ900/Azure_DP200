
Implementing Non-relational database.

1. Azure Data Lake Storage

Azure Data Lake Storage is a Hadoop-compatible data repository that can store any size or type of data. This storage service is 
available as Generation 1 (Gen1) or Generation 2 (Gen2). Data Lake Storage Gen1 users don't have to upgrade to Gen2, but they forgo 
some benefits.

Data Lake Storage Gen2 users take advantage of Azure Blob storage, a hierarchical file system, and performance tuning that helps them 
process big-data analytics solutions. In Gen2, developers can access data through either the Blob API or the Data Lake file API. 
Gen2 can also act as a storage layer for a wide range of compute platforms, including Azure Databricks, Hadoop, and Azure HDInsight, 
but data doesn't need to be loaded into the platforms.

Key features
Here are the key features of Data Lake Storage:

Unlimited scalability
Hadoop compatibility
Security support for both access control lists (ACLs)
POSIX compliance
An optimized Azure Blob File System (ABFS) driver that's designed for big-data analytics
Zone-redundant storage
Geo-redundant storage

Data ingestion
To ingest data into your system, use Azure Data Factory, Apache Sqoop, Azure Storage Explorer, the AzCopy tool, PowerShell, or Visual Studio. To use the File Upload feature to import file sizes above 2 GB, use PowerShell or Visual Studio. AzCopy supports a maximum file size of 1 TB and automatically splits data files that exceed 200 GB.

Queries
In Data Lake Storage Gen1, data engineers query data by using the U-SQL language. In Gen 2, use the Azure Blob Storage API or the Azure Data Lake System (ADLS) API.

Data security
Because Data Lake Storage supports Azure Active Directory ACLs, security administrators can control data access by using the familiar Active Directory Security Groups. Role-based access control (RBAC) is available both in Gen1 and Gen2. Built-in security groups include ReadOnlyUsers, WriteAccessUsers, and FullAccessUsers.

Enable the firewall to limit traffic to only Azure services. Data Lake Storage automatically encrypts data at rest, protecting data privacy.

Azure Cosmos DB is a globally distributed, multimodel database. You can deploy it by using several API models:

SQL API
MongoDB API
Cassandra API
Gremlin API
Table API

Because of the multimodel architecture of Azure Cosmos DB, you benefit from each model's inherent capabilities. For example, 
you can use MongoDB for semistructured data, Cassandra for wide columns, or Gremlin for graph databases. When you move your data from SQL, 
MongoDB, or Cassandra to Azure Cosmos DB, applications that are built using the SQL, MongoDB, or Cassandra APIs will continue to operate.

set 01 : https://www.classmarker.com/online-test/start/?quiz=b3g5fbf4b2d05d03

set 02 : https://www.classmarker.com/online-test/start/?quiz=kmg5fbf4b83df14b

set 03 : https://www.classmarker.com/online-test/start/?quiz=jxg5fbf4ba8b1d9e

set 04 : https://www.classmarker.com/online-test/start/?quiz=xyy5fbf4bd9deaf0




